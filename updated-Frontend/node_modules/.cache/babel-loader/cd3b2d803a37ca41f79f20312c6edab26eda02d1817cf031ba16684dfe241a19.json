{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amjad\\\\Complaint Chain Tool\\\\complaint-chain-frontend\\\\src\\\\pages\\\\CustomerDashboard\\\\CustomerDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    nic: \"\",\n    phone: \"\"\n  });\n  const [complaintData, setComplaintData] = useState({\n    name: \"\",\n    nationalId: \"\",\n    contact: \"\",\n    email: \"\",\n    address: \"\",\n    description: \"\",\n    department: \"Select Department\",\n    urgency: \"High\",\n    submittedAt: new Date().toISOString().slice(0, 16)\n  });\n  useEffect(() => {\n    const email = localStorage.getItem(\"citizenEmail\"); // get email from login\n    if (!email) return;\n\n    // Fetch user details by email\n    axios.get(`http://localhost:8081/Complaint-chain/api/auth/citizen?email=${email}`).then(res => {\n      const data = res.data;\n      setUserData(data);\n\n      // Autofill complaint form\n      setComplaintData(prev => ({\n        ...prev,\n        name: `${data.firstName} ${data.lastName}`,\n        nationalId: data.nic,\n        contact: data.phone,\n        email: data.email\n      }));\n    }).catch(err => console.error(\"Error fetching citizen data:\", err));\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setComplaintData({\n      ...complaintData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: complaintData.name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"National ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nationalId\",\n          value: complaintData.nationalId,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contact:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"contact\",\n          value: complaintData.contact,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: complaintData.email,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"EFGv7HYU0DvevITOznDdqZhE/pI=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CustomerDashboard","_s","userData","setUserData","firstName","lastName","email","nic","phone","complaintData","setComplaintData","name","nationalId","contact","address","description","department","urgency","submittedAt","Date","toISOString","slice","localStorage","getItem","get","then","res","data","prev","catch","err","console","error","handleChange","e","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/amjad/Complaint Chain Tool/complaint-chain-frontend/src/pages/CustomerDashboard/CustomerDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CustomerDashboard = () => {\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    nic: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const [complaintData, setComplaintData] = useState({\r\n    name: \"\",\r\n    nationalId: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    description: \"\",\r\n    department: \"Select Department\",\r\n    urgency: \"High\",\r\n    submittedAt: new Date().toISOString().slice(0, 16),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const email = localStorage.getItem(\"citizenEmail\"); // get email from login\r\n    if (!email) return;\r\n\r\n    // Fetch user details by email\r\n    axios\r\n      .get(`http://localhost:8081/Complaint-chain/api/auth/citizen?email=${email}`)\r\n      .then((res) => {\r\n        const data = res.data;\r\n        setUserData(data);\r\n\r\n        // Autofill complaint form\r\n        setComplaintData((prev) => ({\r\n          ...prev,\r\n          name: `${data.firstName} ${data.lastName}`,\r\n          nationalId: data.nic,\r\n          contact: data.phone,\r\n          email: data.email,\r\n        }));\r\n      })\r\n      .catch((err) => console.error(\"Error fetching citizen data:\", err));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setComplaintData({ ...complaintData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Submit Complaint</h2>\r\n      <form>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input type=\"text\" name=\"name\" value={complaintData.name} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>National ID:</label>\r\n          <input type=\"text\" name=\"nationalId\" value={complaintData.nationalId} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>Contact:</label>\r\n          <input type=\"text\" name=\"contact\" value={complaintData.contact} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input type=\"email\" name=\"email\" value={complaintData.email} readOnly />\r\n        </div>\r\n        {/* Other input fields like address, description, department, etc. */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}